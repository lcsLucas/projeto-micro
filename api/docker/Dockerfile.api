# Instruções de como criar a imagem e o container
# docker build -t micro_api -f Dockerfile.api .
# docker container run -i --name micro-api --net net-micro -p 9000:9000 micro_api
FROM golang:1.15-alpine AS dependencies
	
WORKDIR /go/src/github.com/lcslucas/projeto-service

COPY ./go.mod .
COPY ./go.sum .

RUN export GO111MODULE=on
RUN go mod download

COPY ./config config
COPY ./database database
COPY ./utils utils

FROM dependencies AS builder

COPY ./api /go/src/github.com/lcslucas/projeto-service/api
COPY ./services/aluno/proto_aluno /go/src/github.com/lcslucas/projeto-service/services/aluno/proto_aluno
COPY ./services/exercicio/proto_exercicio /go/src/github.com/lcslucas/projeto-service/services/exercicio/proto_exercicio
COPY ./services/prova/proto_prova /go/src/github.com/lcslucas/projeto-service/services/prova/proto_prova

WORKDIR /go/src/github.com/lcslucas/projeto-service/api/cmd

RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 \
go build -o /go/bin/projeto-service/api main.go

EXPOSE 9000

ENTRYPOINT [ "/go/bin/projeto-service/api" ]

FROM alpine:latest
COPY --from=builder /go/bin/projeto-service/api /bin/projeto-service/api
COPY ./.env /bin/projeto-service
ENTRYPOINT [ "/bin/projeto-service/api" ]